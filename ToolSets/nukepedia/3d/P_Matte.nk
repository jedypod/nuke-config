set cut_paste_input [stack 0]
push $cut_paste_input
Group {
 name P_Matte
 help "<b>P_Matte</b> creates a sphere or cube shaped 3D matte based on a pass/layer containing position data"
 tile_color 0x2343a3ff
 addUserKnob {20 P_Matte}
 addUserKnob {41 in l "position data" t "Choose a layer from the input that contains position data" T Shuffle_Input_Channels.in}
 addUserKnob {41 output_channel l output t "Resulting matte will be written to this layer only" -STARTLINE T OutChannel.out}
 addUserKnob {6 unpremultiply t "Check if your position layer is premultiplied" +STARTLINE}
 unpremultiply true
 addUserKnob {6 useAlpha l "ignore outside alpha" t "If your input has an alpha channel, checking this will force everything outside that alpha channel to be black" -STARTLINE}
 useAlpha true
 addUserKnob {26 ""}
 addUserKnob {4 matteShape t "Choose the shape of the 3D matte. Current options are \"Sphere\" and \"Cube\"" M {Sphere Cube ""}}
 matteShape Cube
 addUserKnob {41 center t "Sample the viewer or copy XYZ coordinates here to choose the center of the 3D sphere or cube" T Center.center}
 addUserKnob {26 ""}
 addUserKnob {41 rot_order l "rotation order" T Axis1.rot_order}
 addUserKnob {41 rotate T Axis1.rotate}
 addUserKnob {41 scaling l scale T Axis1.scaling}
 addUserKnob {41 uniform_scale l "uniform scale" T Axis1.uniform_scale}
 addUserKnob {41 skew T Axis1.skew}
 addUserKnob {41 pivot T Axis1.pivot}
 addUserKnob {26 ""}
 addUserKnob {4 falloffType M {None Linear Smooth Quadratic Cubic Exponential ""}}
 falloffType Linear
 addUserKnob {7 falloff}
 falloff 1
 addUserKnob {7 exp R 0.1 10}
 exp 8
}
 Axis2 {
  inputs 0
  xform_order STR
  rot_order XYZ
  name Axis1
  xpos -250
  ypos -150
 }
 Input {
  inputs 0
  name Input
  xpos -810
  ypos -442
 }
 Dot {
  name Dot2
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff000000
  xpos -776
  ypos -318
 }
set Nb73d390 [stack 0]
 Dot {
  name Dot1
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff000000
  xpos -776
  ypos 450
 }
set Nb4bea30 [stack 0]
push $Nb73d390
 AddChannels {
  channels alpha
  color 1
  name AddChannels1
  xpos -370
  ypos -328
 }
 Shuffle {
  in none
  alpha blue
  out rgb
  name Shuffle_Input_Channels
  xpos -370
  ypos -274
 }
 Unpremult {
  name Unpremult1
  xpos -370
  ypos -226
  disable {{!parent.unpremultiply i}}
 }
 Add {
  channels rgb
  value {{-center} {-center} {-center} {curve}}
  name Center
  xpos -370
  ypos -178
  addUserKnob {20 User}
  addUserKnob {18 center}
  center {0 0 0}
  addUserKnob {6 center_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 }
 Add {
  channels rgb
  value {{-Axis1.world_matrix.3 i} {-Axis1.world_matrix.7 i} {-Axis1.world_matrix.11 i} {curve i}}
  name Translate_Pivot
  xpos -370
  ypos -130
 }
 ColorMatrix {
  matrix {
      {{Axis1.world_matrix.0} {Axis1.world_matrix.1} {Axis1.world_matrix.2}}
      {{Axis1.world_matrix.4} {Axis1.world_matrix.5} {Axis1.world_matrix.6}}
      {{Axis1.world_matrix.8} {Axis1.world_matrix.9} {Axis1.world_matrix.10}}
    }
  invert true
  name Rotate_Scale_Skew
  xpos -370
  ypos -82
  disable {{hasError x200 1}}
 }
set Nb6e31b0 [stack 0]
 Expression {
  expr3 "(parent.useAlpha &&  a == 0.0 )? 0 : 1-max(abs(r),abs(g),abs(b))"
  name CubeMatte
  xpos -260
  ypos -10
 }
push $Nb6e31b0
 Expression {
  expr3 "(parent.useAlpha &&  a == 0.0 )? 0 : 1-(sqrt((r*r)+(g*g)+(b*b)))"
  name SphereMatte
  xpos -480
  ypos -10
 }
 Switch {
  inputs 2
  which {{matteShape i}}
  name Switch1
  xpos -370
  ypos 62
 }
 Grade {
  channels alpha
  whitepoint {{falloffType?falloff:0}}
  white_clamp true
  name Falloff
  xpos -370
  ypos 128
 }
set Nb71fad0 [stack 0]
 Expression {
  expr3 pow(a,parent.exp)
  name Exponential
  xpos -40
  ypos 230
 }
push $Nb71fad0
 Expression {
  expr3 clamp((a**3),0,1)
  name Cubic
  xpos -150
  ypos 230
 }
push $Nb71fad0
 Expression {
  expr3 clamp(pow2(a),0,1)
  name Quadratic
  xpos -260
  ypos 230
 }
push $Nb71fad0
 Expression {
  expr3 smoothstep(0,1,a)
  name Smooth
  xpos -370
  ypos 230
 }
push $Nb71fad0
 NoOp {
  name Linear
  xpos -480
  ypos 230
 }
push $Nb71fad0
 NoOp {
  name None
  xpos -590
  ypos 230
 }
 Switch {
  inputs 6
  which {{falloffType i}}
  name Switch2
  xpos -370
  ypos 326
 }
 Remove {
  operation keep
  channels alpha
  name Remove1
  xpos -370
  ypos 368
 }
 Copy {
  inputs 2
  from0 -rgba.alpha
  to0 -rgba.alpha
  channels rgb
  bbox B
  name Copy2
  xpos -370
  ypos 434
 }
 Shuffle {
  in alpha
  out alpha
  name OutChannel
  xpos -370
  ypos 542
 }
push $Nb4bea30
 Copy {
  inputs 2
  from0 -rgba.alpha
  to0 -rgba.alpha
  channels rgba
  name Copy1
  xpos -810
  ypos 530
 }
 Output {
  name Output1
  xpos -810
  ypos 806
 }
end_group
