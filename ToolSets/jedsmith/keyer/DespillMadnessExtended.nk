set cut_paste_input [stack 0]
push $cut_paste_input
Group {
 name DespillMadness
 mapsize {0.15 0.15}
 addUserKnob {20 DespillMadness l "Despill Settings"}
 addUserKnob {41 screenType l "screen type" T GizmoControl.screenType}
 addUserKnob {41 algorithm l "despill algorithm" T GizmoControl.algorithm}
 addUserKnob {41 LimitPercentage l "fine tune" T RedLimitsGreen.LimitPercentage}
 addUserKnob {26 ""}
 addUserKnob {26 text_2 l "" +STARTLINE T "spill area correction"}
 addUserKnob {26 spacer l " " T " "}
 addUserKnob {6 sourceLuma l "restore source luminance" t "Restores luminance of original image." +STARTLINE}
 sourceLuma true
 addUserKnob {41 saturation T CC_SpillMap.saturation}
 addUserKnob {41 gamma T CC_SpillMap.gamma}
 addUserKnob {41 offset T CC_SpillMap.offset}
 addUserKnob {26 ""}
 addUserKnob {41 spillMatteOut l "output spill matte in alpha" T GizmoControl.spillMatteOut}
 addUserKnob {26 ""}
 addUserKnob {41 maskChannel l mask T KeymixMask.maskChannel}
 addUserKnob {6 invmsk l invert -STARTLINE}
 addUserKnob {41 which l mix T mix.which}
}
 Input {
  inputs 0
  name img
  xpos 262
  ypos -342
 }
 Dot {
  name Dot6
  xpos 296
  ypos -186
 }
set N12a77f80 [stack 0]
 Dot {
  name Dot2
  xpos 296
  ypos -71
 }
set N12a7c640 [stack 0]
 Dot {
  name Dot3
  xpos 626
  ypos -71
 }
set N12a80b60 [stack 0]
 Expression {
  expr2 b>g*LimitPercentage?g*LimitPercentage:b
  expr3 b-g*LimitPercentage
  name GreenLimitsBlue1
  xpos 728
  ypos 44
  addUserKnob {20 User}
  addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
  LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
 }
push $N12a80b60
 Expression {
  expr2 b>r*LimitPercentage?r*LimitPercentage:b
  expr3 b-r*LimitPercentage
  name RedLimitsBlue
  xpos 592
  ypos 44
  addUserKnob {20 User}
  addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
  LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
 }
push $N12a80b60
 Expression {
  expr2 b>(g+2*r)/2*LimitPercentage?(g+2*r)/2*LimitPercentage:b
  expr3 b-(2*r+g)*LimitPercentage/2
  name DoubleRedAve2
  xpos 1125
  ypos 43
  addUserKnob {20 User}
  addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
  LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
 }
push $N12a80b60
 Expression {
  expr2 b>(2*g+r)/2*LimitPercentage?(2*g+r)/2*LimitPercentage:b
  expr3 b-(r+2*g)*LimitPercentage/2
  name DoubleGreenAve
  xpos 998
  ypos 44
  addUserKnob {20 User}
  addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
  LimitPercentage {{RedLimitsGreen.LimitPercentage}}
 }
push $N12a80b60
 Expression {
  expr2 b>(g+r)/2*LimitPercentage?(g+r)/2*LimitPercentage:b
  expr3 b-(r+g)*LimitPercentage/2
  name RedAndGreenLimitBlue
  xpos 862
  ypos 44
  addUserKnob {20 User}
  addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
  LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
 }
 Switch {
  inputs 5
  which {{GizmoControl.algorithm i}}
  name SwitchBlue
  xpos 728
  ypos 190
 }
 Dot {
  name Dot5
  xpos 762
  ypos 370
 }
push $N12a7c640
 Dot {
  name Dot1
  xpos 164
  ypos -71
 }
set N12a50230 [stack 0]
 Expression {
  expr1 g>b*LimitPercentage?b*LimitPercentage:g
  expr3 g-b*LimitPercentage
  name BlueLimitsGreen
  xpos -15
  ypos 44
  addUserKnob {20 User}
  addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
  LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
 }
push $N12a50230
 Expression {
  expr1 g>r*LimitPercentage?r*LimitPercentage:g
  expr3 g-r*LimitPercentage
  name RedLimitsGreen
  xpos -160
  ypos 44
  addUserKnob {20 User}
  addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
  LimitPercentage 1.3
 }
push $N12a50230
 Expression {
  expr1 g>(b+2*r)/3*LimitPercentage?(b+2*r)/3*LimitPercentage:g
  expr3 g-(r+b)*LimitPercentage/2
  name DoubleRedAve
  xpos 370
  ypos 42
  addUserKnob {20 User}
  addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
  LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
 }
push $N12a50230
 Expression {
  expr1 g>(2*b+r)/3*LimitPercentage?(2*b+r)/3*LimitPercentage:g
  expr3 g-(r+b)*LimitPercentage/2
  name DoubleBlueAve
  xpos 257
  ypos 42
  addUserKnob {20 User}
  addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
  LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
 }
push $N12a50230
 Expression {
  expr1 g>(b+r)/2*LimitPercentage?(b+r)/2*LimitPercentage:g
  expr3 g-(r+b)*LimitPercentage/2
  name RedAveBlueLimitsGreen
  xpos 130
  ypos 44
  addUserKnob {20 User}
  addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
  LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
 }
 Switch {
  inputs 5
  which {{GizmoControl.algorithm i}}
  name SwitchGreen
  xpos -15
  ypos 199
 }
 Dot {
  name Dot4
  xpos 19
  ypos 370
 }
 Switch {
  inputs 2
  which {{GizmoControl.screenType i}}
  name SwitchMain
  xpos 257
  ypos 366
 }
 Clamp {
  channels alpha
  name Clamp1
  xpos 257
  ypos 408
 }
 ColorCorrect {
  maskChannelInput rgba.alpha
  name CC_SpillMap
  xpos 257
  ypos 468
 }
set N12b0b7b0 [stack 0]
 Dot {
  name Dot9
  xpos 440
  ypos 478
 }
 Input {
  inputs 0
  name mask
  xpos -696
  ypos -348
  number 1
 }
 Expression {
  channel0 {-rgba.red -rgba.green -rgba.blue none}
  expr0 0
  channel1 {-rgba.red -rgba.green -rgba.blue none}
  expr1 0
  channel2 {-rgba.red -rgba.green -rgba.blue none}
  expr2 0
  channel3 {rgba.alpha none none rgba.alpha}
  expr3 a==0?0:a
  name AlphaFix1
  label "To avid Gizmo being in state of\nerror without something plugged in input."
  xpos -696
  ypos 861
 }
set N12b2e5a0 [stack 0]
push $N12b2e5a0
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name CopyMask
  xpos -296
  ypos 867
 }
 Invert {
  name Invert1
  xpos -296
  ypos 943
  disable {{parent.invmsk i}}
 }
push $N12a77f80
 Dot {
  name Dot7
  xpos -345
  ypos -186
 }
 Dot {
  name Dot8
  xpos -345
  ypos 551
 }
 Expression {
  channel0 {-rgba.red -rgba.green -rgba.blue none}
  expr0 0
  channel1 {-rgba.red -rgba.green -rgba.blue none}
  expr1 0
  channel2 {-rgba.red -rgba.green -rgba.blue none}
  expr2 0
  channel3 {rgba.alpha none none rgba.alpha}
  expr3 a==0?0:a
  name AlphaFix
  label "To avid Gizmo being in state of\nerror without something plugged in input."
  xpos -27
  ypos 534
 }
set N12b5f150 [stack 0]
 Dot {
  name Dot11
  xpos -113
  ypos 614
 }
 Dot {
  name Dot12
  xpos -113
  ypos 818
 }
set N12b71a70 [stack 0]
push $N12b5f150
push $N12b5f150
push $N12b0b7b0
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  from3 rgba.alpha
  to3 rgba.alpha
  name CopyAlpha
  xpos 257
  ypos 534
 }
set N12b76880 [stack 0]
 Merge2 {
  inputs 2
  operation minus
  name Merge3
  xpos -27
  ypos 672
 }
 Clamp {
  name Clamp2
  xpos -27
  ypos 698
 }
 Saturation {
  saturation 0
  name Saturation2
  xpos -27
  ypos 736
 }
push $N12b76880
 Merge2 {
  inputs 2
  operation plus
  name RestoreLuma
  xpos 257
  ypos 736
  disable {{!parent.sourceLuma i}}
 }
 Keymix {
  inputs 3
  maskChannel -rgba.alpha
  name KeymixMask
  xpos 257
  ypos 943
 }
push $N12b71a70
 Dot {
  name Dot13
  xpos -113
  ypos 1087
 }
 Dissolve {
  inputs 2
  which 1
  name mix
  xpos 257
  ypos 1077
 }
set N1627ebb0 [stack 0]
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  xpos 406
  ypos 1077
 }
 Dot {
  name Dot10
  xpos 440
  ypos 1389
 }
push $N1627ebb0
 Switch {
  inputs 2
  which {{GizmoControl.spillMatteOut i}}
  name SwitchSpillMap
  xpos 257
  ypos 1385
 }
 Output {
  name Output1
  xpos 257
  ypos 1485
 }
 NoOp {
  inputs 0
  name GizmoControl
  xpos 875
  ypos 414
  addUserKnob {20 User}
  addUserKnob {26 version l v1.0}
  addUserKnob {4 screenType l "screen type" M {green blue}}
  addUserKnob {4 algorithm l "despill algorithm" M {average "double green/blue average" "double red average" "red limit" "green/blue limit" ""}}
  algorithm "double red average"
  addUserKnob {6 spillMatteOut l "output spill matte in alpha" +STARTLINE}
  spillMatteOut true
 }
end_group
