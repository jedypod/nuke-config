set cut_paste_input [stack 0]
push $cut_paste_input
Group {
name DespillKeylight
help "<b>Instructions:</b>\nIf you have a greenscreen, set R=0, G=1, B=0. Start adjusting the R and G channels until you get the despill color you wish. Negative values are helpful sometimes.\n\nAdjust the Despill Bias to adjust what foreground colors to affect."
addUserKnob {20 DespillKeylight}
addUserKnob {41 screenColour l "Screen Colour" t "<b>Instructions:</b>\nIf you have a greenscreen, set R=0, G=1, B=0. Start adjusting the R and G channels until you get the despill color you wish. Negative values are helpful sometimes.\n\nAdjust the Despill Bias to adjust what foreground colors to affect." T Keylight_DESPILL.screenColour}
addUserKnob {41 despillBias l "Despill Bias" T Keylight_DESPILL.despillBias}
addUserKnob {26 ""}
addUserKnob {26 gradespillmap l "" t "The spill map is the pixels that are considered spill based on the Screen Color and Bias settings above.\n\nIf saturation is at 0 and multiply is at 1, the luminance of the spill is just being replaced with grey. However you can grade this spill's color as well if it helps your shot." +STARTLINE T "<b>Grade Spill Map"}
addUserKnob {41 saturation T SPILLMAP_SATURATION.saturation}
addUserKnob {41 mode l "" -STARTLINE T SPILLMAP_SATURATION.mode}
addUserKnob {41 multiply T SPILLMAP_GRADE.multiply}
addUserKnob {41 gamma T SPILLMAP_GRADE.gamma}
addUserKnob {6 use_input_alpha l "Output Input Alpha" +STARTLINE}
use_input_alpha true
}
Input {
inputs 0
name InputMask
xpos -1380
ypos -450
number 1
}
Input {
inputs 0
name Input
label "\[value number]"
xpos -978
ypos -1176
}
Dot {
name Dot31
label "Plate IN"
note_font_size 42
note_font_color 0x7f7f7f01
xpos -944
ypos -1086
}
set Nc28f2040 [stack 0]
Dot {
name Dot5
note_font_size 42
note_font_color 0x7f7f7f01
xpos -1078
ypos -1086
}
Dot {
name Dot4
note_font_size 42
note_font_color 0x7f7f7f01
xpos -1078
ypos -646
}
set Nfdfe4370 [stack 0]
Grade {
channels alpha
white 0
add 1
name _WHITE_
xpos -1112
ypos -536
}
Switch {
inputs 2
which {{"\[exists parent.input1]"}}
name Switch1
xpos -1112
ypos -450
}
push $Nfdfe4370
push $Nc28f2040
Dot {
name ghost_whisper
knobChanged "from __future__ import with_statement\n\ndef edge_mult(n, k):\n    if n\['enable_fg_alpha_input']:\n        n\['enable_fg_alpha_input'].setValue(False)\n        fg_alpha_input(n, n\['enable_fg_alpha_input'])\n    bg_input_name = 'InputBG'\n    parent_node_name = '.'.join(n.fullName().split('.')\[:-1])\n    with nuke.root():\n        pn = nuke.toNode(parent_node_name)\n        pn.setInput(1, None)\n    with pn:\n        bg_input = nuke.toNode(bg_input_name)\n        bg_input_dot = nuke.toNode('bg_input_dot')\n        if not k.value():\n            nuke.delete(bg_input)\n            nuke.delete(nuke.toNode('InputFG'))\n            n\['enable_fg_alpha_input'].setValue(False)\n            #fg_alpha_input(n, n\['enable_fg_alpha_input'])\n        else:\n            bg_input = nuke.nodes.Input()\n            bg_input\['name'].setValue(bg_input_name)\n            bg_input.setXpos( -260 )\n            bg_input.setYpos( -1192 )\n            bg_input\['label'].setValue('\[value number]')\n            bg_input_dot.setInput(0, bg_input)\n\ndef fg_alpha_input(n, k):\n    if n\['enable_edge_mult']:\n        fg_input_name = 'InputFG'\n        with nuke.root():\n            pn = nuke.toNode('.'.join(n.fullName().split('.')\[:-1]))\n            pn.setInput(2, None)\n        with pn:\n            fg_input = nuke.toNode(fg_input_name)\n            fg_input_dot = nuke.toNode('fg_input_dot')\n            if not k.value():\n                nuke.delete(fg_input)\n            else:\n                #edge_mult(n, n\['enable_edge_mult'])\n                fg_input = nuke.nodes.Input()\n                fg_input\['name'].setValue(fg_input_name)\n                fg_input.setXpos( 70 )\n                fg_input.setYpos( -1192 )\n                fg_input\['label'].setValue('\[value number]')\n                fg_input_dot.setInput(0, fg_input)\n    else:\n        k.setValue(False)\n\nn = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == 'enable_edge_mult':\n    edge_mult(n, k)\n\nif k.name() == 'enable_fg_alpha_input':\n    fg_alpha_input(n, k)"
tile_color 0x1f00ffff
note_font_size 42
note_font_color 0x7f7f7f01
xpos -944
ypos -1046
addUserKnob {20 User}
addUserKnob {6 enable_edge_mult l "<b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Enable" t "<b>Enable Edge Multiply</b>\nThis allows you to multiply your semitransparent edges by your background color, in order to better blend FG edges with your BG.\n\nThere are two components to this: \nFirst you need your background to multiply into your edges. \n\nSecond, you need a good extraction alpha for your foreground, so that foreground pixels are not affected. You can use the alpha generated by the despill, or (recommended), you can use  your final extraction alpha, which will probably have less holes." +STARTLINE}
addUserKnob {6 enable_fg_alpha_input l "<b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Enable FG Alpha Input" t "Enables an input for your extraction alpha of your foreground, so that foreground pixels are not affected by edge multiplication. \n\nIf there is no FG input connected, the alpha generated by the despill will be used instead." -STARTLINE}
}
Dot {
name Dot1
note_font_size 42
note_font_color 0x7f7f7f01
xpos -944
ypos -966
}
set Ndcd9b5c0 [stack 0]
OFXuk.co.thefoundry.keylight.keylight_v201 {
show "Final Result"
unPreMultiply false
screenColour {0 1 0}
screenColour_panelDropped true
setKnobFlags {screenColour_panelDropped +HIDDEN}
screenGain 1
screenBalance 0.5
alphaBias {0.5 0.5 0.5}
despillBias {0.5 0.5 0.5}
gangBiases false
preBlur 0
"Screen Matte" 0
screenClipMin 0
screenClipMax 1
screenClipRollback 0
screenGrowShrink 0
screenSoftness 0
screenDespotBlack 0
screenDespotWhite 0
screenReplaceMethod "Soft Colour"
screenReplaceColour {0.5 0.5 0.5}
Tuning 0
midPoint 0.5
lowGain 1
midGain 1
highGain 1
"Inside Mask" 0
sourceAlphaHandling Ignore
insideReplaceMethod "Soft Colour"
insideReplaceColour {0.5 0.5 0.5}
Crops 0
SourceXMethod Colour
SourceYMethod Colour
SourceEdgeColour 0
SourceCropL 0
SourceCropR 1
SourceCropB 0
SourceCropT 1
balanceSet false
insideComponent None
outsideComponent None
cacheBreaker true
name Keylight_DESPILL
xpos -978
ypos -890
}
set Nb95c4830 [stack 0]
push $Ndcd9b5c0
Dot {
name Dot2
note_font_size 42
note_font_color 0x7f7f7f01
xpos -676
ypos -966
}
Merge2 {
inputs 2
operation from
bbox B
name Merge17
xpos -710
ypos -890
}
Saturation {
saturation 0
mode Maximum
name SPILLMAP_SATURATION
xpos -710
ypos -810
}
Grade {
multiply 0.5
black_clamp false
name SPILLMAP_GRADE
xpos -710
ypos -770
}
push $Nb95c4830
Merge2 {
inputs 2
operation plus
bbox B
output rgb
name Merge19
xpos -978
ypos -770
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
bbox B
name Use_Input_Alpha
xpos -978
ypos -656
disable {{!parent.use_input_alpha}}
}
push $Nfdfe4370
Keymix {
inputs 3
channels rgba
bbox B
name Keymix1
xpos -978
ypos -450
}
Output {
name Output1
xpos -978
ypos -370
}
end_group
