set cut_paste_input [stack 0]
push $cut_paste_input
Group {
 name NeutralGrade
 tile_color 0x6c9de1ff
 selected true
 xpos 9970
 ypos 18453
 addUserKnob {20 NeutralGrade_tab l NeutralGrade}
 addUserKnob {26 match_label l "@b;match" T ""}
 addUserKnob {18 matchsrc l "src color"}
 matchsrc 0.18
 addUserKnob {6 matchsrc_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {18 matchdst l "dst color"}
 matchdst 0.18
 addUserKnob {6 matchdst_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {18 blackpoint t "this value will be subtracted from the offset"}
 blackpoint {0 0 0}
 addUserKnob {6 blackpoint_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {22 set_blackpoint l "Set Blackpoint" t "Set blackpoint based on selected region in the viewer. If preserve luminance is checked, the rgb will be balanced but the overall luminance will not be changed." T "node = nuke.thisNode()\nblackpoint_preserve_luminance = node\['blackpoint_preserve_luminance']\nnuke.root().begin()\n\n# Get viewer and connected node to calculate format resolution\nviewer = nuke.activeViewer().node()\nif viewer.input(0):\n    viewed_node = viewer.input(0)\n    if not nuke.selectedNodes():\n        viewed_node.setSelected(1)\nelse:\n    viewed_node = nuke.activeViewer().node()\n\n# Get selected sample area\nbboxinfo = nuke.activeViewer().node()\['colour_sample_bbox'].value()\naspect = float(viewed_node.width() * viewed_node.pixelAspect()) / float(viewed_node.height())\ncornerA = \[(bboxinfo\[0]*0.5+0.5) * viewed_node.width(), (((bboxinfo\[1] * 0.5) + (0.5/aspect)) * aspect) * viewed_node.height()]\ncornerB = \[(bboxinfo\[2]*0.5+0.5) * viewed_node.width(), (((bboxinfo\[3] * 0.5) + (0.5/aspect)) * aspect) * viewed_node.height()]\narea = \[cornerB\[0] - cornerA\[0], cornerB\[1] - cornerA\[1]]\ncenter = \[cornerA\[0] + (area\[0]/2), cornerA\[1] + (area\[1] / 2)]\n\n# Reset blackpoint and add knob\nnode\['blackpoint'].setValue(\[0, 0, 0])\nadd_value = node\['add'].getValue()\nnode\['add'].setValue(\[0, 0, 0])\n\n# Sample input colors within box\ncolor_sample = \[node.sample('rgba.red', center\[0], center\[1], area\[0], area\[1]), node.sample('rgba.green', center\[0], center\[1], area\[0], area\[1]), node.sample('rgba.blue', center\[0], center\[1], area\[0], area\[1])]\n\nif blackpoint_preserve_luminance:\n    # calculate average luminance with rec709 weighting\n    average_luminance = color_sample\[0]*0.2126 + color_sample\[1]*0.7152 + color_sample\[2]*0.0722\n    color_sample = \[v - average_luminance for v in color_sample]\n\n# Set blackpoint to sampled value\nnode\['blackpoint'].setValue(color_sample)\nnode\['add'].setValue(add_value)\n" +STARTLINE}
 addUserKnob {6 blackpoint_preserve_luminance l "preserve luminance" t "Try not to shift luminance of the blackpoint when sampling, only shift the color to be neutral." -STARTLINE}
 blackpoint_preserve_luminance true
 addUserKnob {22 reset_match l Reset T "n = nuke.thisNode()\nn\['blackpoint'].setValue(\[0, 0, 0])\nn\['add'].setValue(\[0, 0, 0])\nn\['matchsrc'].setValue(0.18)\nn\['matchdst'].setValue(0.18)" +STARTLINE}
 addUserKnob {26 grade_label l "@b; grade" T " "}
 addUserKnob {7 exposure t "Adjust exposure in stops" R -4 4}
 addUserKnob {6 exposure_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {18 multiply R 0 4}
 multiply {1 1 1}
 addUserKnob {6 multiply_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {18 add R -0.25 0.25}
 add {0 0 0}
 addUserKnob {6 add_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {22 reset_grade l Reset T "n = nuke.thisNode()\nn\['exposure'].setValue(0)\nn\['multiply'].setValue(\[1, 1, 1])\nn\['add'].setValue(\[0, 0, 0])" +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {6 invert t "Invert the color transform." +STARTLINE}
 addUserKnob {26 cdl_calc_label l " " T "<b>calculated slope offset</b>"}
 addUserKnob {41 slope T OCIOCDLTransform.slope}
 addUserKnob {41 offset T OCIOCDLTransform.offset}
}
 Input {
  inputs 0
  name Input
  xpos -370
  ypos -550
 }
 Dot {
  name Dot1
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -336
  ypos -426
 }
set Nfcbd850 [stack 0]
 OCIOCDLTransform {
  slope {{parent.OCIOCDLTransform.slope} {parent.OCIOCDLTransform.slope} {parent.OCIOCDLTransform.slope}}
  offset {{parent.OCIOCDLTransform.offset} {parent.OCIOCDLTransform.offset} {parent.OCIOCDLTransform.offset}}
  direction inverse
  working_space scene_linear
  name OCIOCDLTransform_inverse
  xpos -260
  ypos -370
 }
push $Nfcbd850
 OCIOCDLTransform {
  slope {{"matchdst/matchsrc*pow(2, exposure)*multiply"} {"matchdst/matchsrc*pow(2, exposure)*multiply"} {"matchdst/matchsrc*pow(2, exposure)*multiply"}}
  offset {{"parent.add - parent.blackpoint"} {"parent.add - parent.blackpoint"} {"parent.add - parent.blackpoint"}}
  working_space scene_linear
  name OCIOCDLTransform
  xpos -370
  ypos -370
 }
 Switch {
  inputs 2
  which {{parent.invert}}
  name Switch_inverse
  selected true
  xpos -370
  ypos -310
 }
 Output {
  name Output
  xpos -370
  ypos -190
 }
end_group
